#!/usr/bin/env ruby

require 'rubygems'
require 'murmurs'
require 'optparse'

options = {
  :murmurs_url => ENV['MINGLE_MURMURS_URL'],
  :access_key_id => ENV['MINGLE_ACCESS_KEY_ID'],
  :access_secret_key => ENV['MINGLE_ACCESS_SECRET_KEY'],
  :skip_ssl_verify => false,
  :git => false,
  :git_branch => 'master',
  :log_level => :info
}

NOTES = %Q{
You can also setup the following environment variables as options:
  MINGLE_MURMURS_URL         => --murmurs_url
  MINGLE_ACCESS_KEY_ID       => --mingle_access_key_id
  MINGLE_ACCESS_SECRET_KEY   => --mingle_access_secret_key

For further information about Mingle user access key id and secure key, please read:
http://www.thoughtworks.com/products/docs/mingle/current/help/configuring_hmac_authentication.html
}

opts = OptionParser.new do |opts|
  opts.banner = "Usage: murmurs [options] MESSAGE"

  opts.on("-m", "--murmurs_url MINGLE_MURMURS_URL", "Mingle project murmurs url") do |v|
    options[:murmurs_url] = v
  end

  opts.on("-k", "--mingle_access_key_id MINGLE_ACCESS_KEY_ID", "Mingle user access key id") do |v|
    options[:access_key_id] = v
  end

  opts.on("-s", "--mingle_access_secret_key MINGLE_SECURE_ACCESS_KEY", "Mingle user access secure key") do |v|
    options[:access_secret_key] = v
  end

  opts.on_tail('-g', '--git', 'Process standard input of Git hook post-receive, and murmur each commits; default is false') do
    options[:git] = true
  end

  opts.on("-b", "--git_branch GIT_BRANCH", "Murmur Git commits in branch, default is master") do |v|
    options[:git_branch] = v
  end

  opts.on_tail("-i", "--skip_ssl_verify", "Skip SSL verify in case the server is using self signed SSL certificate, default is false") do
    options[:skip_ssl_verify] = true
  end

  opts.on_tail('-h', '--help') do
    puts opts
    puts NOTES
    exit(0)
  end

end.parse!

include Murmurs
murmur(options.delete(:murmurs_url), ARGV[0] || ARGF.read, options)
